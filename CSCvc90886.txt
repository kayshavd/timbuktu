Index: NetworkBootHandler.java
===================================================================
--- NetworkBootHandler.java     (revision 68378)
+++ NetworkBootHandler.java     (working copy)
@@ -31,7 +31,8 @@
 public class NetworkBootHandler implements CustomActionHandlerIf
 {
     final static Logger         logger                = Logger.getLogger(NetworkBootHandler.class);
-    private static String EXCEEDS_LENGTH        = "Hostname exceeds 63 characters. Too long.";
+    private final static int MAX_HOSTNAME_LENGTH = 255;
+    private static String EXCEEDS_LENGTH        = "Hostname exceeds " + MAX_HOSTNAME_LENGTH + " characters. Too long.";
     private static String INVALID_CHARACTERS    = "Hostname contains invalid characters. Can contain alphanumeric characters with a dot only";
     private static String VALID_HOSTNAME        = "Valid Hostname";
     private static String FIRST_ALPHA_CHARACTER = "First character in Hostname should be an alphabetic character";
@@ -77,7 +78,7 @@
                     throw new Exception(hostValidationResult);
                 }
 
-                request.setServerHostname(config.getServerHostname());
+                request.setServerHostname(hostname);
                 request.setServerMACAddress(config.getServerMACAddress().toLowerCase());
                 request.setServerNameserver(config.getServerNameserver());
                 request.setServerNetMask(config.getServerNetMask());
@@ -221,7 +222,7 @@
 
     public static String validateHostname(String name)
     {
-        if (name.length() > 63)
+        if (name.length() > MAX_HOSTNAME_LENGTH)
         {
             return EXCEEDS_LENGTH;
         }
@@ -249,20 +250,28 @@
 
     public static String validateHostnameCharacters(String name)
     {
-        if (name.length() > 63)
+        if (name.length() > MAX_HOSTNAME_LENGTH)
         {
+            logger.warn("The hostname " + name 
+                               + " does not meet specifications of standard hostnames (RFC1123). It is too long");
             return EXCEEDS_LENGTH;
         }
 
+        /*
+         * RFC1123 Removes this restriction of the first character being a digit
+         *
         char[] chars = name.toCharArray();
         if (!Character.isLetter(chars[0]))
         {
             return FIRST_ALPHA_CHARACTER;
         }
+        */
 
         if (VMWareUtils.checkAlphaNumericwithSpecialCharacterSet(name)){
             return VALID_HOSTNAME;
         }
+        logger.warn("The hostname " + name 
+                               + " does not meet specifications of standard hostnames (RFC1123). It contains invalid characters");
         return INVALID_CHARACTERS;
     }
 }
Index: NetworkBootMultiBmaHandler.java
===================================================================
--- NetworkBootMultiBmaHandler.java     (revision 68378)
+++ NetworkBootMultiBmaHandler.java     (working copy)
@@ -72,7 +72,7 @@
                     throw new Exception(hostValidationResult);
                 }
 
-                request.setServerHostname(config.getServerHostname());
+                request.setServerHostname(hostname);
                 request.setServerMACAddress(config.getServerMACAddress().toLowerCase());
                 request.setServerNameserver(config.getServerNameserver());
                
